description = "gitpiece-ssm"

configure(allprojects) { project ->
    group = "gitpiece"
    version = "0.0.1-SNAPSHOT"

    ext.springVersion = "4.2.2.RELEASE"
    ext.junitVersion = "4.12"
    ext.servletVersion = "3.1.0"
    ext.tilesVersion = "3.0.1"
    ext.poiVersion = "3.0.2-FINAL"
    ext.jackson = "2.2.3"
    ext.mybatis = "3.3.0"
    //apache commons
    ext.commonsio = "2.4"
    ext.commonslang3 = "3.3.2"
    ext.commonscodec = "1.9"
    ext.commonslogging = "1.2"
    ext.commonsfileupload = "1.3.1"
    ext.commonsbeanutls = "1.9.2"
    ext.aspectjrt = "1.7.4"
    ext.aspectjweaver = "1.8.5"
    ext.cglib = "3.1"
    ext.mybatisspring = "1.2.2"
    ext.druid = "1.0.12"
    ext.ehcachecore = "2.6.9"
    ext.ehcacheweb = "2.0.4"
    ext.shiro = "1.2.3"
    ext.taglibs = "1.1.2"

    ext.gradleScriptDir = "${rootProject.projectDir}/gradle"

    apply plugin: "maven"
    apply plugin: "idea"
    apply plugin: "java"

    compileJava.options*.compilerArgs = [
            "-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
           "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
           "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
           "-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",
           "-Xlint:unchecked", "-Xlint:-options", "-Werror"]

    compileTestJava.options*.compilerArgs = [
            "-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
            "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
            "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
            "-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
            "-Xlint:-unchecked", "-Xlint:-options"]

    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"

    compileJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    compileTestJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
        //options.compilerArgs += "-parameters"
    }


    dependencies {

        //spirng
        compile "org.springframework:spring-context:${springVersion}"
        compile "org.springframework:spring-context-support:${springVersion}"
        compile "org.springframework:spring-orm:${springVersion}"
        compile "org.springframework:spring-oxm:${springVersion}"

        testCompile("junit:junit:${junitVersion}") {
            exclude group: "org.hamcrest:hamcrest-core"
        }
        testCompile("org.mockito:mockito-core:1.10.19") {
            exclude group: "org.hamcrest:hamcrest-core"
        }
        testCompile("org.hamcrest:hamcrest-all:1.3")
        testCompile "org.springframework:spring-test:${springVersion}"
        //sniffer("org.codehaus.mojo:animal-sniffer-ant-tasks:${snifferVersion}")
        //javaApiSignature("org.codehaus.mojo.signature:java16:1.1@signature")  // as from JDK 6 update 18
    }

    repositories {
        mavenLocal()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://repo.spring.io/libs-release" }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
        // don't include or exclude anything explicitly by default. See SPR-12085.
    }
}

project("ssm-core") {
    description = "ssm::ssm-db"

    dependencies {
        // apache commons
        compile "org.apache.commons:commons-lang3:${commonslang3}"
        compile "commons-codec:commons-codec:1.9"
        compile "commons-io:commons-io:${commonsio}"
        compile "commons-logging:commons-logging:${commonslogging}"
        compile "commons-beanutils:commons-beanutils:${commonsbeanutls}"

        compile "com.fasterxml.jackson.core:jackson-core:${jackson}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jackson}"
        compile "com.fasterxml.jackson.core:jackson-annotations:${jackson}"
        compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jackson}"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.3"

        compile "net.sourceforge.jchardet:jchardet:1.0"
    }
}

project("ssm-db-support") {
    description = "ssm::ssm-db-support"

    dependencies {
        compile project(":ssm-core")
        // mybatis
        compile "org.mybatis:mybatis:3.3.0"
        compile "org.mybatis:mybatis-spring:1.2.2"
        // spring
        compile "org.springframework:spring-jdbc:${springVersion}"
        compile "org.springframework:spring-tx:${springVersion}"
        //mongodb
        compile "org.mongodb:mongo-java-driver:2.10.1"
        compile "org.jongo:jongo:1.0"
        //
        compile "javax.persistence:persistence-api:1.0.2"
        compile "org.codehaus.jackson:jackson-mapper-asl:1.9.12"
        //sql解析工具
        compile "com.github.jsqlparser:jsqlparser:0.9.1"
        // apache commons

        compile "com.google.code.findbugs:jsr305:3.0.0"
        testCompile "org.mybatis.generator:mybatis-generator-core:1.3.2"
    }

}

project("ssm-db") {
    description = "ssm::ssm-db"

    dependencies {
        compile project(":ssm-core")
        compile project(":ssm-db-support")

        compile "javax.persistence:persistence-api:1.0.2"
        compile "org.codehaus.jackson:jackson-mapper-asl:1.9.12"
        //sql解析工具
        compile "com.github.jsqlparser:jsqlparser:0.9.1"
        // apache commons

        compile "com.google.code.findbugs:jsr305:3.0.0"
        testCompile "org.mybatis.generator:mybatis-generator-core:1.3.2"
        testCompile "mysql:mysql-connector-java:5.1.34"
    }

}

project("ssm-server") {
    description = "ssm::ssm-server"
    dependencies {
        compile project(":ssm-core")
        compile project(":ssm-db")

    }
}
project("ssm-service") {
    description = "ssm::ssm-server"
    dependencies {
        compile project(":ssm-core")
        compile project(":ssm-db")

    }
}
project("ssm-web-support") {
    description = "ssm::ssm-web-support"
    dependencies {
        compile project(":ssm-core")
        compile project(":ssm-db")

        //spring
        compile "org.springframework:spring-web:${springVersion}"
        compile "org.springframework:spring-webmvc:${springVersion}"
        compile "org.freemarker:freemarker:2.3.23"
        // servlet 3.0+
        compile "javax.servlet:javax.servlet-api:${servletVersion}"

        // commons
        compile "commons-fileupload:commons-fileupload:${commonsfileupload}"
        // other tools
        compile "com.google.guava:guava:17.0"
    }
}
project("ssm-web") {
    apply plugin: "war"

    description = "ssm::ssm-web"

    dependencies {
        compile project(":ssm-core")
        compile project(":ssm-db")
        compile project(":ssm-server")
        compile project(":ssm-service")
        compile project(":ssm-web-support")

        // aop
        compile "org.aspectj:aspectjrt:1.7.4"
        compile "org.aspectj:aspectjweaver:1.8.5"
        compile "cglib:cglib:3.1"
        // validator
        compile "org.hibernate:hibernate-validator:5.1.1.Final"
        compile "mysql:mysql-connector-java:5.1.34"
        // database connection pool
        compile "com.alibaba:druid:${druid}"
        // ehcache
        compile "net.sf.ehcache:ehcache-core:2.6.9"
        compile "net.sf.ehcache:ehcache-web:2.0.4"
        compile "redis.clients:jedis:2.5.1"
        // shiro
        compile "org.apache.shiro:shiro-spring:${shiro}"
        compile "org.apache.shiro:shiro-ehcache:${shiro}"
        compile("org.apache.shiro:shiro-cas:${shiro}") {
            exclude(module: "commons-logging")
        }
        // apache commons

        // ckfinder
//        compile "com.ckfinder:apache-ant-zip:2.3"
//        compile "com.ckfinder:ckfinder:2.3"
//        compile "com.ckfinder:ckfinderplugin-fileeditor:2.3"
        // other tools
//        compile "com.thoughtworks.xstream:xstream:1.4.4"
//        compile "com.ckfinder:ckfinderplugin-imageresize:2.3"
//        compile "net.coobird:thumbnailator:0.4.2"

        compile "com.googlecode.json-simple:json-simple:1.1.1"

//        compile "org.apache.tiles:tiles-api:3.0.1"
//        compile "org.apache.tiles:tiles-template:3.0.1"
//        compile "org.apache.tiles:tiles-request-servlet:1.0.1"
//		compile "org.apache.tiles:tiles-autotag-core-runtime:1.1.0"
//		compile "org.apache.tiles:tiles-request-jsp:1.0.1"
//		compile "org.apache.tiles:tiles-request-api:1.0.1"
        //jstl
        compile "taglibs:standard:${taglibs}"
        // test

        testCompile "com.jayway.jsonpath:json-path:0.9.0"
        testCompile "org.mockito:mockito-core:1.9.5"
    }
    //test.useTestNG()
}

